/// <reference path="../../typings/index.d.ts" />
(function ($) {
    if ($.blockUI) {
        $.blockUI.defaults.baseZ = 2000;
    }
})(jQuery);

;
/// <reference path="../../typings/index.d.ts" />
(function () {
    'use strict';
    var app = angular.module('app', [
        'ngAnimate',
        'ngSanitize',
        'ui.router',
        'ui.bootstrap',
        'ui.jq',
        'abp'
    ]);
    //Configuration for Angular UI routing.
    app.config([
        '$stateProvider', '$urlRouterProvider',
        function ($stateProvider, $urlRouterProvider) {
            $urlRouterProvider.otherwise('/');
            if (abp.auth.isGranted('Pages.Users')) {
                $stateProvider
                    .state('users', {
                    url: '/users',
                    templateUrl: '/App/Main/views/users/index.cshtml',
                    menu: 'Users' //Matches to name of 'Users' menu in RoamingAppNavigationProvider
                });
                $urlRouterProvider.otherwise('/users');
            }
            if (abp.auth.isGranted('Pages.Tenants')) {
                $stateProvider
                    .state('tenants', {
                    url: '/tenants',
                    templateUrl: '/App/Main/views/tenants/index.cshtml',
                    menu: 'Tenants' //Matches to name of 'Tenants' menu in RoamingAppNavigationProvider
                });
                $urlRouterProvider.otherwise('/tenants');
            }
            $stateProvider
                .state('home', {
                url: '/',
                templateUrl: '/App/Main/views/home/home.cshtml',
                menu: 'Home' //Matches to name of 'Home' menu in RoamingAppNavigationProvider
            })
                .state('about', {
                url: '/about',
                templateUrl: '/App/Main/views/about/about.cshtml',
                menu: 'About' //Matches to name of 'About' menu in RoamingAppNavigationProvider
            });
        }
    ]);
})();

;
/// <reference path="../../../typings/index.d.ts" />
var app;
(function (app) {
    var appSession = (function () {
        function appSession(sessionService) {
            this.user = {};
            this.tenant = {};
            var self = this;
            sessionService.getCurrentLoginInformations({ async: false }).success(function (result) {
                self.user = result.user;
                self.tenant = result.tenant;
            });
        }
        appSession.$inject = ['abp.services.app.session'];
        return appSession;
    }());
    app.appSession = appSession;
})(app || (app = {}));
angular.module('app').service('appSession', app.appSession);

;
(function () {
    var controllerId = 'app.views.about';
    angular.module('app').controller(controllerId, [
        '$scope', function ($scope) {
            var vm = this;
            //About logic...
        }
    ]);
})();

;
/// <reference path="../../../../typings/index.d.ts" />
(function () {
    angular.module('app').directive('autoFocus', function () {
        return {
            restrict: 'A',
            link: function ($scope, element) {
                element[0].focus();
            }
        };
    });
})();

;
/// <reference path="../../../../typings/index.d.ts" />
(function () {
    angular.module('app').directive('enterKey', [
        function () {
            return function (scope, element, attrs) {
                element.bind("keydown keypress", function (event) {
                    if (event.which === 13) {
                        scope.$apply(function () {
                            // scope.$eval(attrs.enterKey);
                        });
                        event.preventDefault();
                    }
                });
            };
        }
    ]);
})();

;
(function () {
    var controllerId = 'app.views.home';
    angular.module('app').controller(controllerId, [
        '$scope', function ($scope) {
            var vm = this;
            //Home logic...
        }
    ]);
})();

;
/// <reference path="../../../../typings/index.d.ts" />
var app;
(function (app) {
    var views;
    (function (views) {
        var layout;
        (function (layout) {
            var header = (function () {
                function header($rootScope, $state, appSession, dialogs) {
                    this.$state = $state;
                    this.dialogs = dialogs;
                    this.languages = {};
                    this.currentLanguage = {};
                    this.menu = {};
                    this.currentMenuName = {};
                    var self = this;
                    self.languages = abp.localization.languages;
                    self.currentLanguage = abp.localization.currentLanguage;
                    self.menu = abp.nav.menus.MainMenu;
                    self.currentMenuName = $state.current.menu;
                    self.getShownUserName = function () {
                        if (!abp.multiTenancy.isEnabled) {
                            return appSession.user.userName;
                        }
                        else {
                            if (appSession.tenant) {
                                return appSession.tenant.tenancyName + '\\' + appSession.user.userName;
                            }
                            else {
                                return '.\\' + appSession.user.userName;
                            }
                        }
                    };
                    self.loadProfile = function () {
                        console.log('inisde profile load method');
                        self.dialogs.create('/App/Main/views/profile/modal.cshtml', 'app.views.profile.modal', appSession.user, { windowClass: 'profile-modal-lg' }, 'vm');
                    };
                    $rootScope.$on('$stateChangeSuccess', function (event, toState, toParams, fromState, fromParams) {
                        self.currentMenuName = toState.menu;
                    });
                    abp.event.on('abp.notifications.received', function (userNotification) {
                        console.log(userNotification);
                    });
                }
                header.inject = [
                    '$rootScope',
                    '$state',
                    'appSession',
                    'dialogs'
                ];
                return header;
            }());
            layout.header = header;
        })(layout = views.layout || (views.layout = {}));
    })(views = app.views || (app.views = {}));
})(app || (app = {}));
var myapp = angular.module("app");
myapp.controller('app.views.layout.header', app.views.layout.header);

;
(function () {
    var controllerId = 'app.views.layout';
    angular.module('app').controller(controllerId, [
        '$scope', function ($scope) {
            var vm = this;
            //Layout logic...
        }]);
})();

;
/// <reference path="../../../../typings/index.d.ts" />
var app;
(function (app) {
    var views;
    (function (views) {
        var tenants;
        (function (tenants) {
            var createModal = (function () {
                function createModal($scope, $modalInstance, tenantService) {
                    this.tenantService = tenantService;
                    var self = this;
                    self.tenant = {
                        tenancyName: '',
                        name: '',
                        adminEmailAddress: '',
                        connectionString: ''
                    };
                    self.save = function () {
                        abp.ui.setBusy(null, self.tenantService.createTenant(self.tenant)
                            .success(function () {
                            abp.notify.info(abp.localization.localize('SavedSuccessfully', 'SavedSuccessfully'));
                            $modalInstance.close();
                        }).finally(function () {
                            abp.ui.clearBusy();
                        }));
                    };
                    self.cancel = function () {
                        $modalInstance.dismiss();
                    };
                }
                createModal.$inject = [
                    '$scope', '$modalInstance', 'abp.services.app.tenant'
                ];
                return createModal;
            }());
            tenants.createModal = createModal;
        })(tenants = views.tenants || (views.tenants = {}));
    })(views = app.views || (app.views = {}));
})(app || (app = {}));
angular.module('app').controller('app.views.tenants.createModal', app.views.tenants.createModal);

;
/// <reference path="../../../../typings/index.d.ts" />
(function () {
    angular.module('app').controller('app.views.tenants.index', [
        '$scope', '$modal', 'abp.services.app.tenant',
        function ($scope, $modal, tenantService) {
            var vm = this;
            vm.tenants = [];
            function getTenants() {
                tenantService.getTenants({}).success(function (result) {
                    vm.tenants = result.items;
                });
            }
            vm.openTenantCreationModal = function () {
                var modalInstance = $modal.open({
                    templateUrl: '/App/Main/views/tenants/createModal.cshtml',
                    controller: 'app.views.tenants.createModal as vm',
                    backdrop: 'static'
                });
                modalInstance.result.then(function () {
                    getTenants();
                });
            };
            getTenants();
        }
    ]);
})();

;
/// <reference path="../../../../typings/index.d.ts" />
var app;
(function (app) {
    var views;
    (function (views) {
        var users;
        (function (users) {
            var createModal = (function () {
                function createModal($scope, $uibModalInstance, userService) {
                    this.$uibModalInstance = $uibModalInstance;
                    this.userService = userService;
                    this.user = {};
                    var self = this;
                    self.user = {
                        isActive: true
                    };
                    self.createUser = function () {
                        abp.ui.setBusy(null, self.userService.createUser(self.user).success(function () {
                            abp.notify.info(abp.localization.localize('SavedSuccessfully', 'SavedSuccessfully'));
                            self.$uibModalInstance.close();
                        }));
                    };
                    self.cancel = function () {
                        self.$uibModalInstance.dismiss();
                    };
                }
                createModal.$inject = [
                    '$scope',
                    '$uibModalInstance',
                    'abp.services.app.user'
                ];
                return createModal;
            }());
            users.createModal = createModal;
        })(users = views.users || (views.users = {}));
    })(views = app.views || (app.views = {}));
})(app || (app = {}));
angular.module('app').controller('app.views.users.createModal', app.views.users.createModal);

;
/// <reference path="../../../../typings/index.d.ts" />
var app;
(function (app) {
    var views;
    (function (views) {
        var users;
        (function (users) {
            var index = (function () {
                function index($scope, $uibModal, userService) {
                    this.userService = userService;
                    var self = this;
                    self.users = [];
                    self.getUsers = function () {
                        abp.ui.setBusy(null, self.userService.getUsers({})
                            .success(function (result) {
                            self.users = result.items;
                        }));
                    };
                    self.openUserCreationModal = function () {
                        var modalInstance = $uibModal.open({
                            templateUrl: '/App/Main/views/users/createModal.cshtml',
                            controller: 'app.views.users.createModal as vm',
                            backdrop: 'static'
                        });
                        modalInstance.result.then(function () {
                            self.getUsers();
                        });
                    };
                }
                index.$inject = [
                    '$scope',
                    '$uibModal',
                    'abp.services.app.user'
                ];
                return index;
            }());
            users.index = index;
        })(users = views.users || (views.users = {}));
    })(views = app.views || (app.views = {}));
})(app || (app = {}));
angular.module('app').controller('app.views.users.index', app.views.users.index);
